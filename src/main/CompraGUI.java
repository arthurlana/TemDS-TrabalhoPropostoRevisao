/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Arthur
 */
public class CompraGUI extends javax.swing.JPanel {
    //armezana os dados do produto informado na busca temporariamente
    private Produto produtoSelecionado;
    private ModeloTabelaCompra carrinhoDeComprasTable;
    private double precoCompra;
    /**
     * Creates new form CompraGUI
     */
    public CompraGUI() {
        initComponents();
        meuInitComponents();
        precoCompra = 0.0;
    }
    private void meuInitComponents(){
        this.carrinhoDeComprasTable = new ModeloTabelaCompra(this);
        //criando a conexão entre o objeto da classe ModeloTabelaCompra com a tabela do painel
        tabelaCarrinho.setModel(carrinhoDeComprasTable);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        codigoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nomeTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantidadeTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        precoUnitTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCarrinho = new javax.swing.JTable();
        removerButton = new javax.swing.JButton();
        finalizarButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        addProdutoButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        totalTxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Código");

        codigoTxt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        codigoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoTxtKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Nome");

        nomeTxt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        nomeTxt.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Quantidade");

        quantidadeTxt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        quantidadeTxt.setText("1");
        quantidadeTxt.setEnabled(false);
        quantidadeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeTxtActionPerformed(evt);
            }
        });
        quantidadeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantidadeTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantidadeTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantidadeTxtKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Preço parcial");

        precoUnitTxt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        precoUnitTxt.setEnabled(false);

        tabelaCarrinho.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tabelaCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaCarrinho);

        removerButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButtonActionPerformed(evt);
            }
        });

        finalizarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        finalizarButton.setText("Finalizar");
        finalizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarButtonActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Estoque");

        addProdutoButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addProdutoButton.setText("Add Produto");
        addProdutoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProdutoButtonMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Valor Total: R$");

        totalTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalTxt.setText("(Valor)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(nomeTxt)
                            .addComponent(codigoTxt)
                            .addComponent(quantidadeTxt)
                            .addComponent(precoUnitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addProdutoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addComponent(finalizarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalTxt)
                        .addGap(69, 69, 69)))
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precoUnitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removerButton)
                    .addComponent(finalizarButton)
                    .addComponent(jButton3)
                    .addComponent(jLabel5)
                    .addComponent(totalTxt))
                .addGap(18, 18, 18)
                .addComponent(addProdutoButton)
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void quantidadeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantidadeTxtActionPerformed

    private void codigoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTxtKeyTyped
        //verificando se a tecla pressionada foi o ENTER.
        if(evt.getKeyChar() == '\n'){

            //avaliando se existe informação no campo do código
            if(!codigoTxt.getText().isEmpty()){
                try{
                    //avaliando se o dado informado é numérico
                    int cod = Integer.parseInt(codigoTxt.getText());
                    //efetuando a busca do produto do código informado na interface
                    produtoSelecionado = FakeBancoDeDados.consultaProdutoCod(cod);
                    //avaliando se existe produto com código informado
                    if(produtoSelecionado != null){
                        nomeTxt.setText(produtoSelecionado.getNome());
                        precoUnitTxt.setText(produtoSelecionado.getPreco()+"");
                        quantidadeTxt.setEnabled(true);
                    }else{
                        //não cadastrado
                        JOptionPane.showMessageDialog(null, "Produto não cadastrado", "Código", JOptionPane.WARNING_MESSAGE);
                    }

                }catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null, "O código deve ser um valor numérico","Erro no código",JOptionPane.WARNING_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_codigoTxtKeyTyped

    private void quantidadeTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTxtKeyPressed
        //executa quando a tecla é pressionada por um certo período de tempo
    }//GEN-LAST:event_quantidadeTxtKeyPressed

    private void quantidadeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTxtKeyReleased
        //evento executa quando a tecla deixa de ser pressionada
        //operador do caixa informa uma nova quantidade
        //calcular o preço parcial da quantidade de um mesmo produto (o mesmo que em lote)
        if(!quantidadeTxt.getText().isEmpty()){
            //há informação no campo da quantidade
            try{
                int quantidade = Integer.parseInt(quantidadeTxt.getText());
                double parcial = produtoSelecionado.getPreco() * quantidade;
                precoUnitTxt.setText(String.format("%.2f", parcial)); //correção para muitas casas decimais
            }catch(NumberFormatException ex){
                precoUnitTxt.setText("N/A"); //correção para que o programa não pare se caracteres não númericos forem digitados no campo
            }
        }else{
            //não há informação no campo da quantidade
            precoUnitTxt.setText("N/A");
        }
    }//GEN-LAST:event_quantidadeTxtKeyReleased

    private void quantidadeTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTxtKeyTyped
       //evento executado instanteamente, antes mesmo da informação ser inserida
    }//GEN-LAST:event_quantidadeTxtKeyTyped

    private void addProdutoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProdutoButtonMouseClicked
        if(produtoSelecionado!=null && !precoUnitTxt.getText().equals("N/A")){
            //produto está apto a ser adicionado na tabela
            int quantidade = Integer.parseInt(quantidadeTxt.getText());
            if(quantidade <= produtoSelecionado.getQuantidade()){
                Produto vendido = new Produto(produtoSelecionado.getCodigo(), 
                        produtoSelecionado.getNome(), produtoSelecionado.getPreco(), quantidade); //criando um novo objeto para evitar erros
                //produtoSelecionado.setQuantidade(produtoSelecionado.getQuantidade()- quantidade); //subtraindo as quantidades disponíveis das vendidas
                //fazendo o cálculo do total da compra e atualizando na GUI
                precoCompra += produtoSelecionado.getPreco() * quantidade;
                totalTxt.setText(String.format("%.2f",precoCompra));
                //limpando os campos para que um novo produto seja informado
                codigoTxt.setText("");
                quantidadeTxt.setText("1");
                precoUnitTxt.setText("");
                produtoSelecionado = null;
                quantidadeTxt.setEnabled(false);
                nomeTxt.setText("");
                //adicionando o produto vendido à tabela
                this.carrinhoDeComprasTable.addNovoProduto(vendido);
                tabelaCarrinho.updateUI();
            }else{
                //não há quantidade suficiente do produto
                JOptionPane.showMessageDialog(null, "Não há quantidade suficiente para realizar a venda", 
                        "Estoque insuficiente", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            //produto não existe ou a quantidade não condiz com o padrão esperado
            JOptionPane.showMessageDialog(null, "A quantidade de produtos informada deve ser um valor numérico", 
                        "Entrada de quantidade inválida", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addProdutoButtonMouseClicked

    private void removerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButtonActionPerformed
        int linha = tabelaCarrinho.getSelectedRow();
        if (linha > -1){
            //remoção permitida
            int op = JOptionPane.showConfirmDialog(null,
                    "Desejo remover o produto selecionado?", "Confirmação de exclusão", JOptionPane.WARNING_MESSAGE);
            if (op == JOptionPane.YES_OPTION){
                String senha = JOptionPane.showInputDialog(null, "Informe a senha do gerente", 
                        "Operação restrita", JOptionPane.INFORMATION_MESSAGE);
                if(senha != null && senha.equals("ifmg")){
                    //remover o produto e atualizar as quantidades
                    carrinhoDeComprasTable.removeProdutoCarrinho(linha);
                    atualizaQuantidades();  
                }else{
                    JOptionPane.showMessageDialog(null, "Senha digitada incorreta", "ERRO DE SENHA", JOptionPane.WARNING_MESSAGE);
                }
            }
        }else{
            //remoção não permitida
            JOptionPane.showMessageDialog(null,
                    "Primeiro é preciso selecionar algum produto na tabela", "Erro de seleção", JOptionPane.YES_NO_OPTION);
            
        }
    }//GEN-LAST:event_removerButtonActionPerformed
    
    private boolean verificaQuantidades(){
        Vector<Produto> produtos = carrinhoDeComprasTable.produtosCarrinho();
        for(int i = 0; i < produtos.size(); i++){
            Produto estoque = FakeBancoDeDados.consultaProdutoCod(produtos.get(i).getCodigo());
            if(produtos.get(i).getQuantidade() > estoque.getQuantidade()){
                JOptionPane.showMessageDialog(null,
                    "A quantidade do produto " + estoque.getNome() + "não é suficiente para realizar a venda", "Quantidade insuficiente", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }
        return true;
    }
    private void finalizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarButtonActionPerformed
        //verificar se temos as quantidades dos produtos que estão sendo vendidos
        if(verificaQuantidades() == true){
            Vector<Produto> produtos = carrinhoDeComprasTable.produtosCarrinho();
            //atualizar o banco de dados fake em memória RAM
            for (int i = 0; i < produtos.size(); i++){
                Produto estoque = FakeBancoDeDados.consultaProdutoCod(produtos.get(i).getCodigo());
                estoque.setQuantidade(estoque.getQuantidade()-produtos.get(i).getQuantidade());
                
            }
            //zerando o valor total para a próxima compra
            precoCompra = 0.0;
            totalTxt.setText("0.0");

            //remover os produtos do carrinho de compra da última realizada
            carrinhoDeComprasTable.limparCarrinho();
            tabelaCarrinho.updateUI();
        }
        
        
    }//GEN-LAST:event_finalizarButtonActionPerformed
    public void atualizaQuantidades(){
        //atualiza as informações da tabela
        tabelaCarrinho.updateUI();
        //atualiza o valor da compra com os produtos do carrinho
        double preco = carrinhoDeComprasTable.calculaPrecoParcialCompra();
        totalTxt.setText(String.format("%.2f", preco));
    }
    
    /*private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        JanelaPrincipal.efetuaTransicao(new EstoqueGUI(), "estoque");
    }*/
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProdutoButton;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JButton finalizarButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeTxt;
    private javax.swing.JTextField precoUnitTxt;
    private javax.swing.JTextField quantidadeTxt;
    private javax.swing.JButton removerButton;
    private javax.swing.JTable tabelaCarrinho;
    private javax.swing.JLabel totalTxt;
    // End of variables declaration//GEN-END:variables
}
